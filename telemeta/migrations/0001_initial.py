# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-05-11 15:51
from __future__ import unicode_literals

import dirtyfields.dirtyfields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import telemeta.models.collection
import telemeta.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcquisitionMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'acquisition_modes',
                'verbose_name': 'mode of acquisition',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='AdConversion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'ad_conversions',
                'verbose_name': 'A/D conversion',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='ContextKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'context_keywords',
                'verbose_name': 'keyword',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='CopyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'copy_type',
                'verbose_name': 'copy type',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='Coupe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'coupe',
                'verbose_name': 'coupe',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='Criteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='key')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='value')),
            ],
            options={
                'db_table': 'search_criteria',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='EthnicGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'ethnic_groups',
                'verbose_name': 'population / social group',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='EthnicGroupAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='name')),
                ('ethnic_group', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliases', to='telemeta.EthnicGroup', verbose_name='population / social group')),
            ],
            options={
                'ordering': ['ethnic_group__value'],
                'db_table': 'ethnic_group_aliases',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='Format',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_code', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='original code')),
                ('original_number', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='original number')),
                ('original_status', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='original status')),
                ('original_state', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='technical properties / conservation state')),
                ('original_comments', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='comments / notes')),
                ('original_audio_quality', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='audio quality')),
                ('recording_system', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='recording system')),
                ('tape_thickness', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='tape thickness (um)')),
                ('tape_reference', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='tape reference')),
                ('sticker_presence', telemeta.models.fields.BooleanField(default=False, verbose_name='sticker presence')),
            ],
            options={
                'db_table': 'media_formats',
                'verbose_name': 'format',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='FunctionMSHS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'function',
                'verbose_name': 'function',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='GenericStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'generic_styles',
                'verbose_name': 'generic style',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='IdentifierType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'identifier_type',
                'verbose_name': 'identifier type',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='name')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['name'],
                'db_table': 'instruments',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='InstrumentAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='name')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['name'],
                'db_table': 'instrument_aliases',
                'verbose_name_plural': 'instrument aliases',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='InstrumentAliasRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_name', to='telemeta.InstrumentAlias', verbose_name='alias')),
                ('instrument', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relation', to='telemeta.Instrument', verbose_name='instrument')),
            ],
            options={
                'db_table': 'instrument_alias_relations',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='InstrumentRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_relation', to='telemeta.Instrument', verbose_name='instrument')),
                ('parent_instrument', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_relation', to='telemeta.Instrument', verbose_name='parent instrument')),
            ],
            options={
                'db_table': 'instrument_relations',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='KindOfShortSong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'knidofshortsong',
                'verbose_name': 'kind of short song',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='KindOfSong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'knidofsong',
                'verbose_name': 'kind of song',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='KindOfTale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'knidoftale',
                'verbose_name': 'kind of tale',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', telemeta.models.fields.CharField(blank=True, default=b'', max_length=3, verbose_name='identifier')),
                ('part2B', telemeta.models.fields.CharField(blank=True, default=b'', max_length=3, verbose_name='equivalent ISO 639-2 identifier (bibliographic)')),
                ('part2T', telemeta.models.fields.CharField(blank=True, default=b'', max_length=3, verbose_name='equivalent ISO 639-2 identifier (terminologic)')),
                ('part1', telemeta.models.fields.CharField(blank=True, default=b'', max_length=1, verbose_name='equivalent ISO 639-1 identifier')),
                ('scope', telemeta.models.fields.CharField(blank=True, choices=[(b'I', b'Individual'), (b'M', b'Macrolanguage'), (b'S', b'Special')], default=b'', max_length=1, verbose_name='scope')),
                ('type', telemeta.models.fields.CharField(blank=True, choices=[(b'A', b'Ancient'), (b'C', b'Constructed'), (b'E', b'Extinct'), (b'H', b'Historical'), (b'L', b'Living'), (b'S', b'Special')], default=b'', max_length=1, verbose_name='type')),
                ('name', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='name')),
                ('comment', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='comment')),
            ],
            options={
                'ordering': ['name'],
                'db_table': 'languages',
                'verbose_name_plural': 'languages',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='LegalRight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'legal_rights',
                'verbose_name': 'legal rights',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', telemeta.models.fields.CharField(blank=True, default=b'', max_length=150, unique=True, verbose_name='name')),
                ('type', telemeta.models.fields.IntegerField(blank=True, choices=[(2, 'country'), (1, 'continent'), (0, 'other')], db_index=True, default=0, verbose_name='type')),
                ('latitude', telemeta.models.fields.FloatField(blank=True, default=None, null=True)),
                ('longitude', telemeta.models.fields.FloatField(blank=True, default=None, null=True)),
                ('is_authoritative', telemeta.models.fields.BooleanField(default=False, verbose_name='authoritative')),
            ],
            options={
                'ordering': ['name'],
                'db_table': 'locations',
                'verbose_name': 'location',
                'verbose_name_plural': 'locations',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='LocationAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', telemeta.models.fields.CharField(blank=True, default=b'', max_length=150, verbose_name='alias')),
                ('is_authoritative', telemeta.models.fields.BooleanField(default=False, verbose_name='authoritative')),
                ('location', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliases', to='telemeta.Location', verbose_name='location')),
            ],
            options={
                'ordering': ['alias'],
                'db_table': 'location_aliases',
                'verbose_name_plural': 'location aliases',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='LocationRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_direct', telemeta.models.fields.BooleanField(db_index=True, default=False)),
                ('is_authoritative', telemeta.models.fields.BooleanField(default=False, verbose_name='authoritative')),
                ('ancestor_location', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='descendant_relations', to='telemeta.Location', verbose_name='ancestor location')),
                ('location', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ancestor_relations', to='telemeta.Location', verbose_name='location')),
            ],
            options={
                'ordering': ['ancestor_location__name'],
                'db_table': 'location_relations',
                'verbose_name_plural': 'location relations',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='LocationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', telemeta.models.fields.CharField(blank=True, default=b'', max_length=64, unique=True, verbose_name='identifier')),
                ('name', telemeta.models.fields.CharField(blank=True, default=b'', max_length=150, verbose_name='name')),
            ],
            options={
                'ordering': ['name'],
                'db_table': 'location_types',
                'verbose_name_plural': 'location types',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='title')),
                ('alt_title', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='original title / translation')),
                ('numerotation', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='numerotation')),
                ('creator', telemeta.models.fields.CharField(blank=True, default=b'', help_text='First name, Last name ; First name, Last name', max_length=250, verbose_name='depositor / contributor')),
                ('description', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='description')),
                ('recorded_from_year', telemeta.models.fields.IntegerField(blank=True, default=0, help_text='YYYY/MM/DD', verbose_name='recording date (from)')),
                ('recorded_to_year', telemeta.models.fields.IntegerField(blank=True, default=0, help_text='YYYY/MM/DD', verbose_name='recording date (until)')),
                ('year_published', telemeta.models.fields.IntegerField(blank=True, default=0, help_text='YYYY', verbose_name='year published')),
                ('public_access', telemeta.models.fields.CharField(blank=True, choices=[(b'none', 'none'), (b'metadata', 'metadata'), (b'mixed', 'mixed'), (b'full', 'full')], default=b'metadata', max_length=16, verbose_name='access type')),
                ('location', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='location')),
                ('location_details', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='location details')),
                ('cultural_area', telemeta.models.fields.CharField(blank=True, default=b'', help_text='Cultural area ; Cultural area', max_length=250, verbose_name='cultural area')),
                ('language', telemeta.models.fields.CharField(blank=True, default=b'', help_text='Language ; language', max_length=250, verbose_name='language')),
                ('collector', telemeta.models.fields.CharField(blank=True, default=b'', help_text='First name, Last name ; First name, Last name', max_length=250, verbose_name='recordist')),
                ('informer', telemeta.models.fields.CharField(blank=True, default=b'', help_text='First name, Last name ; First name, Last name', max_length=250, verbose_name='informer')),
                ('informer_details', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='informer details')),
                ('publisher_serial', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='publisher serial number')),
                ('booklet_author', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='booklet author')),
                ('reference', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='publisher reference')),
                ('external_references', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='bibliographic references')),
                ('auto_period_access', telemeta.models.fields.BooleanField(default=True, verbose_name='automatic access after a rolling period')),
                ('code', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, validators=[telemeta.models.collection.is_valid_collection_code], verbose_name='code')),
                ('old_code', telemeta.models.fields.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='old code')),
                ('cnrs_contributor', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='CNRS depositor')),
                ('booklet_description', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='related documentation')),
                ('alt_copies', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='copies')),
                ('comment', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='comment')),
                ('archiver_notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='archiver notes')),
                ('collector_is_creator', telemeta.models.fields.BooleanField(default=False, verbose_name='recordist identical to depositor')),
                ('is_published', telemeta.models.fields.BooleanField(default=False, verbose_name='published')),
                ('conservation_site', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='conservation site')),
                ('approx_duration', telemeta.models.fields.DurationField(blank=True, default=b'0', help_text=b'hh:mm:ss', verbose_name='estimated duration')),
                ('physical_items_num', telemeta.models.fields.IntegerField(blank=True, default=0, verbose_name='number of components (medium / piece)')),
                ('items_done', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='items finished')),
                ('alt_ids', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='copies (obsolete field)')),
                ('travail', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='archiver notes (obsolete field)')),
                ('acquisition_mode', telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='telemeta.AcquisitionMode', verbose_name='mode of acquisition')),
                ('ad_conversion', telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='telemeta.AdConversion', verbose_name='digitization')),
                ('copy_type', telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='telemeta.CopyType', verbose_name='copy type')),
                ('language_iso', telemeta.models.fields.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='telemeta.Language', verbose_name='Language (ISO norm)')),
                ('legal_rights', telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='telemeta.LegalRight', verbose_name='legal rights')),
            ],
            options={
                'ordering': ['code'],
                'db_table': 'media_collections',
                'verbose_name': 'collection',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaCollectionIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(blank=True, max_length=255, unique=True, verbose_name='identifier')),
                ('date_add', models.DateTimeField(auto_now_add=True, verbose_name='date added')),
                ('date_first', models.DateTimeField(verbose_name='date of first attribution')),
                ('date_last', models.DateTimeField(verbose_name='date of last attribution')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='date modified')),
                ('notes', models.TextField(null=True, verbose_name='notes')),
                ('collection', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifiers', to='telemeta.MediaCollection', verbose_name='collection')),
                ('type', telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='telemeta.IdentifierType', verbose_name='type')),
            ],
            options={
                'db_table': 'media_collection_identifier',
                'verbose_name': 'collection identifier',
                'verbose_name_plural': 'collection identifiers',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaCollectionPerformance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('musician', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='informer')),
                ('alias', telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='telemeta.InstrumentAlias', verbose_name='precisions')),
                ('collection', telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='telemeta.MediaCollection', verbose_name='collection')),
                ('instrument', telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='telemeta.Instrument', verbose_name='composition')),
            ],
            options={
                'db_table': 'media_collection_performances',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaCollectionRelated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='title')),
                ('date', models.DateTimeField(auto_now=True, verbose_name='date')),
                ('description', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='description')),
                ('mime_type', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='mime_type')),
                ('url', telemeta.models.fields.CharField(blank=True, default=b'', max_length=500, verbose_name='url')),
                ('credits', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='credits')),
                ('file', telemeta.models.fields.FileField(blank=True, db_column=b'filename', default=b'', max_length=255, upload_to=b'items/%Y/%m/%d', verbose_name='file')),
                ('collection', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related', to='telemeta.MediaCollection', verbose_name='collection')),
            ],
            options={
                'db_table': 'media_collection_related',
                'verbose_name': 'collection related media',
                'verbose_name_plural': 'collection related media',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaCorpus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='title')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='description_old')),
                ('descriptions', models.TextField(blank=True, verbose_name='description')),
                ('code', models.CharField(max_length=250, unique=True, verbose_name='code')),
                ('public_access', models.CharField(choices=[(b'none', 'none'), (b'metadata', 'metadata'), (b'mixed', 'mixed'), (b'full', 'full')], default=b'metadata', max_length=16, verbose_name='public access')),
                ('recorded_from_year', telemeta.models.fields.IntegerField(blank=True, default=0, help_text='YYYY', verbose_name='recording year (from)')),
                ('recorded_to_year', telemeta.models.fields.IntegerField(blank=True, default=0, help_text='YYYY', verbose_name='recording year (until)')),
                ('children', models.ManyToManyField(blank=True, related_name='corpus', to='telemeta.MediaCollection', verbose_name='collections')),
            ],
            options={
                'ordering': ['code'],
                'db_table': 'media_corpus',
                'verbose_name': 'corpus',
                'verbose_name_plural': 'corpus',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaCorpusRelated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='title')),
                ('date', models.DateTimeField(auto_now=True, verbose_name='date')),
                ('description', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='description')),
                ('mime_type', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='mime_type')),
                ('url', telemeta.models.fields.CharField(blank=True, default=b'', max_length=500, verbose_name='url')),
                ('credits', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='credits')),
                ('file', telemeta.models.fields.FileField(blank=True, db_column=b'filename', default=b'', max_length=255, upload_to=b'items/%Y/%m/%d', verbose_name='file')),
                ('resource', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related', to='telemeta.MediaCorpus', verbose_name='corpus')),
            ],
            options={
                'db_table': 'media_corpus_related',
                'verbose_name': 'corpus related media',
                'verbose_name_plural': 'corpus related media',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaFonds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='title')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='description_old')),
                ('descriptions', models.TextField(blank=True, verbose_name='description')),
                ('code', models.CharField(max_length=250, unique=True, verbose_name='code')),
                ('public_access', models.CharField(choices=[(b'none', 'none'), (b'metadata', 'metadata'), (b'mixed', 'mixed'), (b'full', 'full')], default=b'metadata', max_length=16, verbose_name='public access')),
                ('children', models.ManyToManyField(blank=True, related_name='fonds', to='telemeta.MediaCorpus', verbose_name='corpus')),
            ],
            options={
                'ordering': ['code'],
                'db_table': 'media_fonds',
                'verbose_name': 'fonds',
                'verbose_name_plural': 'fonds',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaFondsRelated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='title')),
                ('date', models.DateTimeField(auto_now=True, verbose_name='date')),
                ('description', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='description')),
                ('mime_type', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='mime_type')),
                ('url', telemeta.models.fields.CharField(blank=True, default=b'', max_length=500, verbose_name='url')),
                ('credits', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='credits')),
                ('file', telemeta.models.fields.FileField(blank=True, db_column=b'filename', default=b'', max_length=255, upload_to=b'items/%Y/%m/%d', verbose_name='file')),
                ('resource', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related', to='telemeta.MediaFonds', verbose_name='fonds')),
            ],
            options={
                'db_table': 'media_fonds_related',
                'verbose_name': 'fonds related media',
                'verbose_name_plural': 'fonds related media',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='title')),
                ('alt_title', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='original title / translation')),
                ('collector', telemeta.models.fields.CharField(blank=True, default=b'', help_text='First name, Last name ; First name, Last name', max_length=250, verbose_name='collector')),
                ('description', telemeta.models.fields.TextField(blank=True, default=b'', help_text='Describe the item', verbose_name='description')),
                ('informer', telemeta.models.fields.CharField(blank=True, default=b'', help_text='First name, Last name ; First name, Last name', max_length=250, verbose_name='informer')),
                ('recorded_from_date', telemeta.models.fields.DateField(blank=True, default=None, help_text='YYYY-MM-DD', null=True, verbose_name='recording date (from)')),
                ('recorded_to_date', telemeta.models.fields.DateField(blank=True, default=None, help_text='YYYY-MM-DD', null=True, verbose_name='recording date (until)')),
                ('public_access', telemeta.models.fields.CharField(blank=True, choices=[(b'none', 'none'), (b'metadata', 'metadata'), (b'full', 'full')], default=b'metadata', max_length=16, verbose_name='access type')),
                ('location_comment', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='location details')),
                ('language', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='language')),
                ('language_iso', telemeta.models.fields.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Language (ISO norm)')),
                ('context_comment', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='Ethnographic context')),
                ('moda_execut', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='implementing rules')),
                ('author', telemeta.models.fields.CharField(blank=True, default=b'', help_text='First name, Last name ; First name, Last name', max_length=250, verbose_name='author / compositor')),
                ('mshs_author', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='author')),
                ('mshs_composer', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='composer')),
                ('mshs_timbre', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='timbre')),
                ('mshs_timbre_ref', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='timbre referenced')),
                ('mshs_timbre_code', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='timbre code')),
                ('mshs_alt_title', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='alternate title')),
                ('mshs_melody', telemeta.models.fields.TextField(blank=True, default=b'', help_text='You can use ABC notation', verbose_name='melody')),
                ('mshs_domain_song', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='kind of song')),
                ('mshs_domain_vocal', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='kind of vocal')),
                ('mshs_domain_music', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='kind of music')),
                ('mshs_domain_tale', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='kind of tale')),
                ('mshs_details', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='Details')),
                ('mshs_function', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='Function')),
                ('mshs_dance', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='Dance')),
                ('mshs_dance_details', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='Details on dance')),
                ('mshs_deposit_digest', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='Digest')),
                ('mshs_deposit_thematic', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='Thematic')),
                ('mshs_deposit_names', telemeta.models.fields.CharField(blank=True, default=b'', help_text='First name, Last name ; First name, Last name', max_length=250, verbose_name='Names')),
                ('mshs_deposit_places', telemeta.models.fields.CharField(blank=True, default=b'', help_text='Place named; place named; ...', max_length=250, verbose_name='places')),
                ('mshs_deposit_periods', telemeta.models.fields.CharField(blank=True, default=b'', help_text='Period recounted; period recounted; ...', max_length=250, verbose_name='periods')),
                ('mshs_text_bool', telemeta.models.fields.BooleanField(default=False, verbose_name='Text ?')),
                ('mshs_text', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='Text')),
                ('mshs_incipit', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='incipit')),
                ('mshs_refrain', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='refrain')),
                ('mshs_jingle', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='jingle')),
                ('mshs_title_ref_coirault', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='Title ref. Coirault')),
                ('mshs_code_coirault', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='code Coirault')),
                ('mshs_title_ref_laforte', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='Title ref. Laforte')),
                ('mshs_code_laforte', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='code Laforte')),
                ('mshs_title_ref_Dela', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='Title ref. Delarue-Teneze')),
                ('mshs_code_Dela', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='code Delarue-Teneze')),
                ('mshs_title_ref_Aare', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='Title ref. Aare-Thomson')),
                ('mshs_code_Aare', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='code Aare-Thomson')),
                ('mshs_musical_organization', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='Musical organization')),
                ('mshs_group', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='Group')),
                ('depositor', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='depositor')),
                ('code', telemeta.models.fields.CharField(blank=True, default=b'', help_text='CollectionCode_ItemCode', max_length=250, unique=True, validators=[django.core.validators.RegexValidator(code=b'invalid_code', message=b'Code must conform to XXXX_XXX_000X_0000_000', regex=b'^[A-Z]{4}_[A-Z]{3}_[A-Z0-9]{4}_[0-9]{4}_[0-9]{3}$')], verbose_name='code')),
                ('old_code', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='original code')),
                ('track', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='item number')),
                ('collector_selection', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='collector selection')),
                ('collector_from_collection', telemeta.models.fields.BooleanField(default=False, verbose_name='collector as in collection')),
                ('creator_reference', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='creator reference')),
                ('external_references', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='published references')),
                ('auto_period_access', telemeta.models.fields.BooleanField(default=True, verbose_name='automatic access after a rolling period')),
                ('comment', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='remarks')),
                ('approx_duration', telemeta.models.fields.DurationField(blank=True, default=b'0', help_text='hh:mm:ss', verbose_name='approximative duration')),
                ('mimetype', telemeta.models.fields.CharField(blank=True, default=b'', max_length=255, verbose_name='mime type')),
                ('file', telemeta.models.fields.FileField(blank=True, db_column=b'filename', default=b'', max_length=1024, upload_to=b'items/%Y/%m/%d', verbose_name='file')),
                ('url', models.URLField(blank=True, max_length=512, verbose_name='URL')),
                ('recordist', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='recordist')),
                ('digitalist', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='digitalist')),
                ('digitization_date', telemeta.models.fields.DateField(blank=True, default=None, null=True, verbose_name='digitization date')),
                ('publishing_date', telemeta.models.fields.DateField(blank=True, default=None, null=True, verbose_name='publishing date')),
                ('scientist', telemeta.models.fields.CharField(blank=True, default=b'', help_text='First name, Last name ; First name, Last name', max_length=250, verbose_name='scientist')),
                ('summary', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='summary')),
                ('contributor', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='contributor')),
                ('collection', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='telemeta.MediaCollection', verbose_name='collection')),
                ('ethnic_group', telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='telemeta.EthnicGroup', verbose_name='population / social group')),
                ('generic_style', telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='telemeta.GenericStyle', verbose_name='generic style')),
                ('location', telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='telemeta.Location', verbose_name='location')),
            ],
            options={
                'db_table': 'media_items',
                'verbose_name': 'item',
                'permissions': (('can_play_all_items', 'Can play all media items'), ('can_download_all_items', 'Can download all media items')),
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaItemAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analyzer_id', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='id')),
                ('name', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='name')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='value')),
                ('unit', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='unit')),
                ('item', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='telemeta.MediaItem', verbose_name='item')),
            ],
            options={
                'ordering': ['name'],
                'db_table': 'media_analysis',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaItemIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(blank=True, max_length=255, unique=True, verbose_name='identifier')),
                ('date_add', models.DateTimeField(auto_now_add=True, verbose_name='date added')),
                ('date_first', models.DateTimeField(verbose_name='date of first attribution')),
                ('date_last', models.DateTimeField(verbose_name='date of last attribution')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='date modified')),
                ('notes', models.TextField(null=True, verbose_name='notes')),
                ('item', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifiers', to='telemeta.MediaItem', verbose_name='item')),
                ('type', telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='telemeta.IdentifierType', verbose_name='type')),
            ],
            options={
                'db_table': 'media_item_identifier',
                'verbose_name': 'item identifier',
                'verbose_name_plural': 'item identifiers',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaItemKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keyword_relations', to='telemeta.MediaItem', verbose_name='item')),
                ('keyword', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_relations', to='telemeta.ContextKeyword', verbose_name='keyword')),
            ],
            options={
                'db_table': 'media_item_keywords',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaItemMarker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='public_id')),
                ('time', telemeta.models.fields.FloatField(blank=True, default=0, verbose_name='time (s)')),
                ('title', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='title')),
                ('date', models.DateTimeField(auto_now=True, verbose_name='date')),
                ('description', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='description')),
                ('author', telemeta.models.fields.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='markers', to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('item', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='markers', to='telemeta.MediaItem', verbose_name='item')),
            ],
            options={
                'ordering': ['time'],
                'db_table': 'media_markers',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaItemRelated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='title')),
                ('date', models.DateTimeField(auto_now=True, verbose_name='date')),
                ('description', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='description')),
                ('mime_type', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='mime_type')),
                ('url', telemeta.models.fields.CharField(blank=True, default=b'', max_length=500, verbose_name='url')),
                ('credits', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='credits')),
                ('file', telemeta.models.fields.FileField(blank=True, db_column=b'filename', default=b'', max_length=255, upload_to=b'items/%Y/%m/%d', verbose_name='file')),
                ('item', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related', to='telemeta.MediaItem', verbose_name='item')),
            ],
            options={
                'db_table': 'media_item_related',
                'verbose_name': 'item related media',
                'verbose_name_plural': 'item related media',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaItemTranscoded',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mimetype', models.CharField(blank=True, max_length=255, verbose_name='mime_type')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='date')),
                ('status', models.IntegerField(choices=[(0, 'broken'), (1, 'pending'), (2, 'processing'), (3, 'done'), (5, 'ready')], default=1, verbose_name='status')),
                ('file', models.FileField(blank=True, max_length=1024, upload_to=b'items/%Y/%m/%d', verbose_name='file')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transcoded', to='telemeta.MediaItem', verbose_name='item')),
            ],
            options={
                'db_table': 'telemeta_media_transcoded',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaItemTranscodingFlag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mime_type', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='mime_type')),
                ('date', models.DateTimeField(auto_now=True, verbose_name='date')),
                ('value', telemeta.models.fields.BooleanField(default=False, verbose_name='transcoded')),
                ('item', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transcoding', to='telemeta.MediaItem', verbose_name='item')),
            ],
            options={
                'db_table': 'media_transcoding',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='title')),
                ('start', telemeta.models.fields.FloatField(blank=True, default=0, verbose_name='start')),
                ('end', telemeta.models.fields.FloatField(blank=True, default=0, verbose_name='end')),
                ('item', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parts', to='telemeta.MediaItem', verbose_name='item')),
            ],
            options={
                'db_table': 'media_parts',
                'verbose_name': 'item part',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MediaType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'media_type',
                'verbose_name': 'media type',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MetadataAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'metadata_authors',
                'verbose_name': 'record author',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='MetadataWriter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'metadata_writers',
                'verbose_name': 'record writer',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='NumberOfChannels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'original_channel_number',
                'verbose_name': 'number of channels',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'organization',
                'verbose_name': 'organization',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='OriginalFormat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'original_format',
                'verbose_name': 'original format',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='PhysicalFormat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'physical_formats',
                'verbose_name': 'archive format',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='public_id')),
                ('title', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='title')),
                ('description', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='description')),
                ('author', telemeta.models.fields.ForeignKey(db_column=b'author', on_delete=django.db.models.deletion.CASCADE, related_name='playlists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'playlists',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='PlaylistResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='public_id')),
                ('resource_type', telemeta.models.fields.CharField(blank=True, choices=[(b'item', b'item'), (b'collection', b'collection'), (b'marker', b'marker'), (b'fonds', b'fonds'), (b'corpus', b'corpus')], default=b'', max_length=250, verbose_name='resource_type')),
                ('resource_id', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='resource_id')),
                ('playlist', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='telemeta.Playlist', verbose_name='playlist')),
            ],
            options={
                'db_table': 'playlist_resources',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'publishers',
                'verbose_name': 'publisher',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='PublisherCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='value')),
                ('publisher', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publisher_collections', to='telemeta.Publisher', verbose_name='publisher')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'publisher_collections',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='PublishingStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'publishing_status',
                'verbose_name': 'secondary edition',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='RecordingContext',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'recording_contexts',
                'verbose_name': 'recording context',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='Revision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element_type', telemeta.models.fields.CharField(blank=True, choices=[(b'collection', b'collection'), (b'item', b'item'), (b'part', b'part'), (b'marker', b'marker'), (b'media', b'media'), (b'fonds', b'fonds'), (b'corpus', b'corpus')], default=b'', max_length=16, verbose_name='element type')),
                ('element_id', telemeta.models.fields.IntegerField(blank=True, default=0, verbose_name='element identifier')),
                ('change_type', telemeta.models.fields.CharField(blank=True, choices=[(b'import', b'import'), (b'create', b'create'), (b'update', b'update'), (b'delete', b'delete')], default=b'', max_length=16, verbose_name='modification type')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='time')),
                ('user', telemeta.models.fields.ForeignKey(db_column=b'username', on_delete=django.db.models.deletion.CASCADE, related_name='revisions', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'ordering': ['-time'],
                'db_table': 'revisions',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='Rights',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'rights',
                'verbose_name': 'rights',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='Search',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='date')),
                ('description', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='Description')),
                ('criteria', models.ManyToManyField(blank=True, related_name='search', to='telemeta.Criteria', verbose_name='criteria')),
                ('username', telemeta.models.fields.ForeignKey(db_column=b'username', on_delete=django.db.models.deletion.CASCADE, related_name='searches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'db_table': 'searches',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'media_status',
                'verbose_name': 'collection status',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='TapeLength',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'tape_length',
                'verbose_name': 'tape length (cm)',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='TapeSpeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'tape_speed',
                'verbose_name': 'tape speed (cm/s)',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='TapeVendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'tape_vendor',
                'verbose_name': 'tape brand',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='TapeWheelDiameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'tape_wheel_diameter',
                'verbose_name': 'tape wheel diameter (cm)',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='TapeWidth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'tape_width',
                'verbose_name': 'tape width (inch)',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'topic',
                'verbose_name': 'topic',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='Institution')),
                ('department', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='Department')),
                ('attachment', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='Attachment')),
                ('function', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='Function')),
                ('address', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='Address')),
                ('telephone', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, verbose_name='Telephone')),
                ('expiration_date', telemeta.models.fields.DateField(blank=True, default=None, null=True, verbose_name='Expiration_date')),
                ('user', telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
            options={
                'db_table': 'profiles',
                'permissions': (('can_view_users_and_profiles', 'Can view other users and any profile'),),
            },
        ),
        migrations.CreateModel(
            name='VernacularStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', telemeta.models.fields.CharField(blank=True, default=b'', max_length=250, unique=True, verbose_name='value')),
                ('notes', telemeta.models.fields.TextField(blank=True, default=b'', verbose_name='notes')),
            ],
            options={
                'ordering': ['value'],
                'db_table': 'vernacular_styles',
                'verbose_name': 'vernacular style',
            },
            bases=(models.Model, dirtyfields.dirtyfields.DirtyFieldsMixin),
        ),
        migrations.AddField(
            model_name='mediaitem',
            name='media_type',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='telemeta.MediaType', verbose_name='media type'),
        ),
        migrations.AddField(
            model_name='mediaitem',
            name='mshs_coupe',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='telemeta.Coupe', verbose_name='coupe'),
        ),
        migrations.AddField(
            model_name='mediaitem',
            name='organization',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='telemeta.Organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='mediaitem',
            name='rights',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='telemeta.Rights', verbose_name='rights'),
        ),
        migrations.AddField(
            model_name='mediaitem',
            name='topic',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='telemeta.Topic', verbose_name='topic'),
        ),
        migrations.AddField(
            model_name='mediaitem',
            name='vernacular_style',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='telemeta.VernacularStyle', verbose_name='vernacular style'),
        ),
        migrations.AddField(
            model_name='mediacollection',
            name='media_type',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='telemeta.MediaType', verbose_name='media type'),
        ),
        migrations.AddField(
            model_name='mediacollection',
            name='metadata_author',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='telemeta.MetadataAuthor', verbose_name='record author'),
        ),
        migrations.AddField(
            model_name='mediacollection',
            name='metadata_writer',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='telemeta.MetadataWriter', verbose_name='record writer'),
        ),
        migrations.AddField(
            model_name='mediacollection',
            name='original_format',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='telemeta.OriginalFormat', verbose_name='original format'),
        ),
        migrations.AddField(
            model_name='mediacollection',
            name='physical_format',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='telemeta.PhysicalFormat', verbose_name='archive format'),
        ),
        migrations.AddField(
            model_name='mediacollection',
            name='publisher',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='telemeta.Publisher', verbose_name='publisher'),
        ),
        migrations.AddField(
            model_name='mediacollection',
            name='publisher_collection',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='telemeta.PublisherCollection', verbose_name='publisher collection'),
        ),
        migrations.AddField(
            model_name='mediacollection',
            name='publishing_status',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='telemeta.PublishingStatus', verbose_name='secondary edition'),
        ),
        migrations.AddField(
            model_name='mediacollection',
            name='recording_context',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='telemeta.RecordingContext', verbose_name='recording context'),
        ),
        migrations.AddField(
            model_name='mediacollection',
            name='status',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='telemeta.Status', verbose_name='collection status'),
        ),
        migrations.AddField(
            model_name='location',
            name='complete_type',
            field=telemeta.models.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='telemeta.LocationType', verbose_name='complete type'),
        ),
        migrations.AddField(
            model_name='location',
            name='current_location',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='past_names', to='telemeta.Location', verbose_name='current location'),
        ),
        migrations.AddField(
            model_name='format',
            name='item',
            field=telemeta.models.fields.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='format', to='telemeta.MediaItem', verbose_name='item'),
        ),
        migrations.AddField(
            model_name='format',
            name='original_channels',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='format', to='telemeta.NumberOfChannels', verbose_name='number of channels'),
        ),
        migrations.AddField(
            model_name='format',
            name='original_location',
            field=telemeta.models.fields.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='format', to='telemeta.Location', verbose_name='original location'),
        ),
        migrations.AddField(
            model_name='format',
            name='physical_format',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='format', to='telemeta.PhysicalFormat', verbose_name='physical format'),
        ),
        migrations.AddField(
            model_name='format',
            name='tape_speed',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='format', to='telemeta.TapeSpeed', verbose_name='tape speed (cm/s)'),
        ),
        migrations.AddField(
            model_name='format',
            name='tape_vendor',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='format', to='telemeta.TapeVendor', verbose_name='tape vendor'),
        ),
        migrations.AddField(
            model_name='format',
            name='tape_wheel_diameter',
            field=telemeta.models.fields.WeakForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='format', to='telemeta.TapeWheelDiameter', verbose_name='tape wheel diameter (cm)'),
        ),
        migrations.AlterUniqueTogether(
            name='mediaitemkeyword',
            unique_together=set([('item', 'keyword')]),
        ),
        migrations.AlterUniqueTogether(
            name='mediaitemidentifier',
            unique_together=set([('identifier', 'item')]),
        ),
        migrations.AlterUniqueTogether(
            name='mediacollectionidentifier',
            unique_together=set([('identifier', 'collection')]),
        ),
        migrations.AlterUniqueTogether(
            name='locationrelation',
            unique_together=set([('location', 'ancestor_location')]),
        ),
        migrations.AlterUniqueTogether(
            name='locationalias',
            unique_together=set([('location', 'alias')]),
        ),
        migrations.AlterUniqueTogether(
            name='instrumentrelation',
            unique_together=set([('instrument', 'parent_instrument')]),
        ),
        migrations.AlterUniqueTogether(
            name='instrumentaliasrelation',
            unique_together=set([('alias', 'instrument')]),
        ),
        migrations.AlterUniqueTogether(
            name='ethnicgroupalias',
            unique_together=set([('ethnic_group', 'value')]),
        ),
    ]
